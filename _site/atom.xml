<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>bc-zip</title>
 <link href="http://hyde.getpoole.com/atom.xml" rel="self"/>
 <link href="http://hyde.getpoole.com/"/>
 <updated>2014-06-23T18:19:20+02:00</updated>
 <id>http://hyde.getpoole.com</id>
 <author>
   <name>Andrea Farruggia</name>
   <email></email>
 </author>

 
 <entry>
   <title>Usage</title>
   <link href="http://hyde.getpoole.com/2014/06/23/usage/"/>
   <updated>2014-06-23T00:00:00+02:00</updated>
   <id>http://hyde.getpoole.com/2014/06/23/usage</id>
   <content type="html">&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;

&lt;p&gt;The executable is invoked with the following syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip command &amp;lt;command-specific options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The most interesting commands are the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;bit-optimal&lt;/code&gt;:	compress the file so compresson ratio is maximized&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;compress&lt;/code&gt;:		optimize one resource (decompression speed, compression ratio) given a bound on the other one.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;decompress&lt;/code&gt;: 	decompress a file &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are also two commands, namely encoders and gens, which we will illustrate later in this document.&lt;/p&gt;

&lt;h2 id=&quot;bit-optimal&quot;&gt;bit-optimal&lt;/h2&gt;

&lt;p&gt;We report the most important options (bold options are compulsory). For others, have a look at the command-line help 
(just type &lt;code&gt;bc-zip bit-optimal&lt;/code&gt; to show the help).&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Meaning&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-i file&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;File to be compressed. Can also be specified by the first positional argument.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-o file&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Filename of compressed output. Can also be specified by the second positional argument.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-e encoder&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Integer encoder used in compression. A list of all supported encoders can be retrieved by invoking the bc-zip command “encoders”. We suggest to pick one among &lt;code&gt;soda09_16&lt;/code&gt; (succinct, relatively slow at decompression) and &lt;code&gt;hybrid-16&lt;/code&gt; (less succinct, very fast decompression speeds).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-b bucket&lt;/td&gt;
      &lt;td&gt;Logically splits the input file into blocks of bucket megabytes, compresses them individually and then concatenate them to obtain the final compressed file. Lowers compression time at the expense of optimality and, thus, compression ratio.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-z&lt;/td&gt;
      &lt;td&gt;Shows a progress bar while compressing.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip bit-optimal input output.lzo -e hybrid-16 -b 64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compress file &lt;code&gt;input&lt;/code&gt; into &lt;code&gt;output.lzo&lt;/code&gt;, using the fast encoder &lt;code&gt;hybrid-16&lt;/code&gt;, with buckets of &lt;code&gt;64&lt;/code&gt; megabytes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip bit-optimal input output.lzo -e soda09_16 -z
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Optimally compress file &lt;code&gt;input&lt;/code&gt; into &lt;code&gt;output.lzo&lt;/code&gt;, using the succinct encoder &lt;code&gt;soda09_16&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;compress&quot;&gt;compress&lt;/h2&gt;

&lt;p&gt;Compress implements “bicriteria” compression.
In order to evaluate decompression times, a &lt;strong&gt;target&lt;/strong&gt; file encoding the decompression time model for the target machine (that is, the machine in which decompression will take place) is required. Have a look at section &lt;a href=&quot;/2014/06/23/target/&quot;&gt;Target files&lt;/a&gt; for more informations about this matter.&lt;/p&gt;

&lt;p&gt;In the following we illustrate the most important options (bold options are compulsory).&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Meaning&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-i file&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;File to be compressed. Can also be specified by the first positional argument.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-e encoder&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Integer encoder used in compression. A list of all supported encoders can be retrieved by invoking the bc-zip command “encoders”. We suggest to pick one among &lt;strong&gt;soda09_16&lt;/strong&gt; (succinct, relatively slow at decompression) and &lt;strong&gt;hybrid-16&lt;/strong&gt; (less succinct, very fast decompression speeds).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-t target&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Specify the target machine model file, as obtained by the calibrator tool (see the section about the calibrator for further informations), WITHOUT the .tgt suffix. That is, if the model is names X.tgt, then just pass X to this option.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-b bound&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Specify the compression bound. If the bound has the form Xk, then the compression size will be at most X kilobytes and the decompression time minimized. If the bound has the form Xm, then the  decompression time will be at most X milliseconds (according to the target model specified with  option -t ) and compressed size minimized. Multiple bounds can be specified by separating different bounds with a comma: in this case the file will be compressed multiple times, once for each bound.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-l level&lt;/td&gt;
      &lt;td&gt;Specify a compression level (float in range [0,1]), which might be in compression space or  decompression time. A compression level is a “relative” way of setting bounds. A level in the form XS (such as 0.5S) defines a bound on the compression space. It means that, if the most space-succinct compressed file for the input file has space S_1, and the compressed file with the highest decompression speed has space S_2 (with S_1 &amp;lt; S_2), then the level specifies a bound on compressed space equal to S_1 + X * (S_2 - S_1). In other words, compressing a file with level 0S is the same as compressing the file with the bit-optimal command, while compressing a file with level 1S instructs the compressor to obtain the decompression time-optimal compression file. Linearly increasing the level increases linearly the compressed space of the final parsing. A level in the form XT (such as 0.2T) similarly defines a bound on the decompression time, so a level of 0T obtains the compression with the lowest decompression time, while a level of 1T obtains the most succinct compressed file. A level of 0.5T has a decompression time which is a mean of the decompression time of the most succinct compressed file and the decompression time of the compressed file with the highest decompression speed. Multiple levels can be specified by separating different bounds with a comma: in this case the file will be compressed multiple times, once for each level.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-z&lt;/td&gt;
      &lt;td&gt;Shows a progress bar while compressing.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;At least one among -b or -l must be selected. The output file name is a combination of the input file name and the compression options specified.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Suppose you have a file &lt;code&gt;input.txt&lt;/code&gt; to be compressed and a target file &lt;code&gt;smartphone.tgt&lt;/code&gt;, which models the decompression time of a compressed file on a particular smartphone.
Suppose the most succinct compressed file has a decompression time of 600 msec (with encoder &lt;code&gt;hybrid-16&lt;/code&gt;) and takes 200MB, while the fastest compressed file is decompressed in 300msec (also with encoder &lt;code&gt;hybrid-16&lt;/code&gt;) and takes 400MB of space.
Then:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip compress input.txt -e hybrid-16 -t smartphone -b 300000k -z
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compress file &lt;code&gt;input.txt&lt;/code&gt; with encoder &lt;code&gt;hybrid-16&lt;/code&gt;, obtaining the fastest compressed file which is not greater than 300 megabytes (300,000 kilobytes), showing a progress bar during the process. The compressed file is &lt;code&gt;input.txt#hybrid-16#300MB.lzo&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip compress input.txt -e soda09_16 -t smartphone -b 300000k,600m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compress file &lt;code&gt;input.txt&lt;/code&gt; two times with encoder &lt;code&gt;soda09_16&lt;/code&gt;: the first time with a bound of 300MB in space, saving in &lt;code&gt;input.txt#soda09_16#300MB.lzo&lt;/code&gt;; the second with a time bound of 600 msecs (according to model &lt;code&gt;smartphone.tgt&lt;/code&gt;, stored in the calling directory), saving in &lt;code&gt;input.txt#soda09_16#600msec.lzo&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip compress input.txt -e hybrid-16 -t smartphone -l 0.5T,0.1T,0.1S -b 300000k
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compress file input.txt four times:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;first time with a level of &lt;code&gt;0.5T&lt;/code&gt;, so with a time bound of 450 msec (remember the assumptions made at the beginning), saving in &lt;code&gt;input.txt#hybrid-16#0.5T.lzo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;second time with a level of &lt;code&gt;0.1T&lt;/code&gt;, so with a time bound of 330 msec, saving in &lt;code&gt;input.txt#hybrid-16#0.5T.lzo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;third time with a level of &lt;code&gt;0.1S&lt;/code&gt;, so with a space bound of 220MB, saving in &lt;code&gt;input.txt#hybrid-16#0.1S.lzo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;fourth time with a bound of 300MB, saving in &lt;code&gt;input.txt#hybrid-16#300MB.lzo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;decompress&quot;&gt;decompress&lt;/h2&gt;

&lt;p&gt;Usage: bc-zip decompress input_file output_file&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bc-zip decompress compressed.lzo original
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Decompress file &lt;code&gt;compressed.lzo&lt;/code&gt; into file &lt;code&gt;original&lt;/code&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Target</title>
   <link href="http://hyde.getpoole.com/2014/06/23/target/"/>
   <updated>2014-06-23T00:00:00+02:00</updated>
   <id>http://hyde.getpoole.com/2014/06/23/target</id>
   <content type="html">&lt;h1 id=&quot;target-file&quot;&gt;Target file&lt;/h1&gt;

&lt;h2 id=&quot;what-it-is-and-why-its-needed&quot;&gt;What it is and why it’s needed?&lt;/h2&gt;

&lt;p&gt;Different machines decompress the same file with different decompression times. So, in order to properly compute the decompression time of a compressed file for a given target machine, &lt;em&gt;bc-zip&lt;/em&gt; needs a decompression time model tuned for that target machine (which may be different than the machine used in compression!).&lt;/p&gt;

&lt;p&gt;bc-zip does not ship with any decompression time model by default. Instead, bc-zip needs a &lt;em&gt;target file&lt;/em&gt; when it is invoked with the “compress” command.&lt;/p&gt;

&lt;p&gt;A target file is a small, human-readable file which encodes the decompression time model for a particular machine.&lt;/p&gt;

&lt;h2 id=&quot;how-do-i-get-it&quot;&gt;How do I get it?&lt;/h2&gt;

&lt;p&gt;A target file can be obtained in an automatic or semi-automatic fashion through the use of the provided &lt;em&gt;calibrator&lt;/em&gt; tool.&lt;/p&gt;

&lt;p&gt;A calibrator obtains the target file of the machine in which it is executed.&lt;/p&gt;

&lt;p&gt;The calibrator tool is composed of two objects: a shell script &lt;code&gt;calibrator.sh&lt;/code&gt; and an executable &lt;code&gt;calibrator&lt;/code&gt;, both located in the &lt;code&gt;tool/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;The user must invoke the shell script, taking care of having both the shell script and the executable on the same directory.&lt;/p&gt;

&lt;p&gt;The tool is invoked as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./calibrator.sh 	&amp;lt;target name&amp;gt; &amp;lt;memory hierarchy descriptor&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;target name&lt;/strong&gt;: the name of that particular machine. If X is passed, the outputted target file will be named X.tgt.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;memory hierarchy descriptor&lt;/strong&gt;: A file with a line for each memory level (e.g. L1 and L2 caches, main memory), sorted by capacity, with just two fields for each line separated by some space: level capacity, in kilobytes, and latency, in nanoseconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A valid memory hierarchy descriptor could be the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
32 				0.41
256 			1.2
6144			3.3
4294967296		80
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which means that that particular machine has a L1 cache of 32KB with access latency of 0.4ns, a 256kb L2 cache with latency 1.2ns, a L3 cache with latency 3.3 and a main memory of 4GB with latency of 80ns.&lt;/p&gt;

&lt;p&gt;This file can also be generated automatically via the get_latencies tool, which can be invoked in the following way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./get_latencies lmbench_file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;code&gt;lmbench_file&lt;/code&gt; is the output of tool &lt;code&gt;lat_mem_rd&lt;/code&gt; in the &lt;a href=&quot;http://www.bitmover.com/lmbench/get_lmbench.html&quot;&gt;LMBench3 suite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./calibrator client client_hierarchy.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtains the target file client.tgt of the machine in which it is executed, provided that client_hierarchy.txt properly describes the memory hierarchy of that machine.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Source Code</title>
   <link href="http://hyde.getpoole.com/2014/06/23/source-code/"/>
   <updated>2014-06-23T00:00:00+02:00</updated>
   <id>http://hyde.getpoole.com/2014/06/23/source-code</id>
   <content type="html">&lt;h1 id=&quot;source-code&quot;&gt;Source Code&lt;/h1&gt;

&lt;p&gt;The source code is hosted on &lt;a href=&quot;https://github.com/farruggia/bc-zip&quot;&gt;GitHub&lt;/a&gt; and licensed under the (very permissive) &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;&gt;Apache License&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to clone, fork, play with the compressor and, possibly, embed it into your application (and maybe &lt;a href=&quot;/2014/06/23/contacts/&quot;&gt;let us know what you think about it&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If you rather prefer a plain zipball of the latest version, just &lt;a href=&quot;https://github.com/farruggia/bc-zip/archive/public.zip&quot;&gt;click here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Contact Us</title>
   <link href="http://hyde.getpoole.com/2014/06/23/contacts/"/>
   <updated>2014-06-23T00:00:00+02:00</updated>
   <id>http://hyde.getpoole.com/2014/06/23/contacts</id>
   <content type="html">&lt;h1 id=&quot;contact-us&quot;&gt;Contact Us&lt;/h1&gt;

&lt;p&gt;The &lt;em&gt;bicriteria&lt;/em&gt; technology has been envised and developed at the &lt;a href=&quot;http://acube.di.unipi.it/&quot;&gt;A³ Lab, Department of Computer Science, University of Pisa&lt;/a&gt; by (in alphabetical order):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.di.unipi.it/~farruggi&quot; title=&quot;Andrea Farruggia&quot;&gt;Andrea Farruggia&lt;/a&gt;, PhD Student&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.di.unipi.it/~ferragin&quot;&gt;Paolo Ferragina&lt;/a&gt;, Full Professor&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.di.unipi.it/~frangio&quot;&gt;Antonio Frangioni&lt;/a&gt;, Full Professor&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://zola.di.unipi.it/rossano&quot;&gt;Rossano Venturini&lt;/a&gt;, Researcher&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The tool has been mainly developed by &lt;a href=&quot;http://www.di.unipi.it/~farruggi&quot; title=&quot;Andrea Farruggia&quot;&gt;Andrea Farruggia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any question, drop us an email.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Compiling</title>
   <link href="http://hyde.getpoole.com/2014/06/23/compiling/"/>
   <updated>2014-06-23T00:00:00+02:00</updated>
   <id>http://hyde.getpoole.com/2014/06/23/compiling</id>
   <content type="html">&lt;h1 id=&quot;compilation&quot;&gt;Compilation&lt;/h1&gt;

&lt;p&gt;bc-zip requires the following components:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;A &lt;code&gt;C++11&lt;/code&gt;-enabled compiler (&lt;code&gt;g++&lt;/code&gt; 4.7+, &lt;code&gt;clang&lt;/code&gt; 3.2+, &lt;code&gt;icc&lt;/code&gt; 11+)&lt;/li&gt;
  &lt;li&gt;Boost (uBLAS, program_options)&lt;/li&gt;
  &lt;li&gt;A POSIX environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The project is compiled like any standard CMake project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the project’s directory&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmake ../&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The binary (&lt;code&gt;bc-zip&lt;/code&gt;) will be located in the &lt;code&gt;build&lt;/code&gt; directory.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Bibliography</title>
   <link href="http://hyde.getpoole.com/2014/06/23/biblio/"/>
   <updated>2014-06-23T00:00:00+02:00</updated>
   <id>http://hyde.getpoole.com/2014/06/23/biblio</id>
   <content type="html">&lt;h1 id=&quot;bibliography&quot;&gt;Bibliography&lt;/h1&gt;

&lt;h3 id=&quot;soda-2014&quot;&gt;SODA 2014&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.di.unipi.it/~farruggi&quot;&gt;Andrea Farruggia&lt;/a&gt;, &lt;a href=&quot;http://www.di.unipi.it/~ferragin&quot;&gt;Paolo Ferragina&lt;/a&gt;, &lt;a href=&quot;http://www.di.unipi.it/~frangio&quot;&gt;Antonio Frangioni&lt;/a&gt;, and &lt;a href=&quot;http://zola.di.unipi.it/rossano&quot;&gt;Rossano Venturini&lt;/a&gt;. &lt;a href=&quot;http://epubs.siam.org/doi/abs/10.1137/1.9781611973402.115&quot;&gt;Bicriteria data compression. In SODA, pages 1582–1595, 2014&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@inbook{doi:10.1137/1.9781611973402.115,
author = {Antonio Frangioni and Paolo Ferragina and Rossano Venturini and Andrea Farruggia},
title = {Bicriteria data compression},
booktitle = {Proceedings of the Twenty-Fifth Annual ACM-SIAM Symposium on Discrete Algorithms},
chapter = {115},
pages = {1582-1595},
doi = {10.1137/1.9781611973402.115},
URL = {http://epubs.siam.org/doi/abs/10.1137/1.9781611973402.115},
eprint = {http://epubs.siam.org/doi/pdf/10.1137/1.9781611973402.115}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;esa-2014&quot;&gt;ESA 2014&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.di.unipi.it/~farruggi&quot;&gt;Andrea Farruggia&lt;/a&gt;, &lt;a href=&quot;http://www.di.unipi.it/~ferragin&quot;&gt;Paolo Ferragina&lt;/a&gt;, &lt;a href=&quot;http://zola.di.unipi.it/rossano&quot;&gt;Rossano Venturini&lt;/a&gt;. Bicriteria data compression: efficient and usable. In ESA2014 (to appear).&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Introducing Hyde</title>
   <link href="http://hyde.getpoole.com/2013/12/28/introducing-hyde/"/>
   <updated>2013-12-28T00:00:00+01:00</updated>
   <id>http://hyde.getpoole.com/2013/12/28/introducing-hyde</id>
   <content type="html">&lt;p&gt;Hyde is a brazen two-column &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; theme that pairs a prominent sidebar with uncomplicated content. It’s based on &lt;a href=&quot;http://getpoole.com&quot;&gt;Poole&lt;/a&gt;, the Jekyll butler.&lt;/p&gt;

&lt;h3 id=&quot;built-on-poole&quot;&gt;Built on Poole&lt;/h3&gt;

&lt;p&gt;Poole is the Jekyll Butler, serving as an upstanding and effective foundation for Jekyll themes by &lt;a href=&quot;https://twitter.com/mdo&quot;&gt;@mdo&lt;/a&gt;. Poole, and every theme built on it (like Hyde here) includes the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Complete Jekyll setup included (layouts, config, &lt;a href=&quot;/404&quot;&gt;404&lt;/a&gt;, &lt;a href=&quot;/atom.xml&quot;&gt;RSS feed&lt;/a&gt;, posts, and &lt;a href=&quot;/about&quot;&gt;example page&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Mobile friendly design and development&lt;/li&gt;
  &lt;li&gt;Easily scalable text and component sizing with &lt;code&gt;rem&lt;/code&gt; units in the CSS&lt;/li&gt;
  &lt;li&gt;Support for a wide gamut of HTML elements&lt;/li&gt;
  &lt;li&gt;Related posts (time-based, because Jekyll) below each post&lt;/li&gt;
  &lt;li&gt;Syntax highlighting, courtesy Pygments (the Python-based code snippet highlighter)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hyde-features&quot;&gt;Hyde features&lt;/h3&gt;

&lt;p&gt;In addition to the features of Poole, Hyde adds the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sidebar includes support for textual modules and a dynamically generated navigation with active link support&lt;/li&gt;
  &lt;li&gt;Two orientations for content and sidebar, default (left sidebar) and &lt;a href=&quot;https://github.com/poole/lanyon#reverse-layout&quot;&gt;reverse&lt;/a&gt; (right sidebar), available via &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/poole/hyde#themes&quot;&gt;Eight optional color schemes&lt;/a&gt;, available via &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/hyde#readme&quot;&gt;Head to the readme&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;h3 id=&quot;browser-support&quot;&gt;Browser support&lt;/h3&gt;

&lt;p&gt;Hyde is by preference a forward-thinking project. In addition to the latest versions of Chrome, Safari (mobile and desktop), and Firefox, it is only compatible with Internet Explorer 9 and above.&lt;/p&gt;

&lt;h3 id=&quot;download&quot;&gt;Download&lt;/h3&gt;

&lt;p&gt;Hyde is developed on and hosted with GitHub. Head to the &lt;a href=&quot;https://github.com/poole/hyde&quot;&gt;GitHub repository&lt;/a&gt; for downloads, bug reports, and features requests.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://hyde.getpoole.com/2012/02/07/example-content/"/>
   <updated>2012-02-07T00:00:00+01:00</updated>
   <id>http://hyde.getpoole.com/2012/02/07/example-content</id>
   <content type="html">&lt;p&gt;This blog post shows a few different types of content that’s supported and styled with Hyde. Basic typography, images, and code are all supported.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. &lt;strong&gt;Nullam quis risus eget urna mollis&lt;/strong&gt; ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;sub-heading&quot;&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;return a + b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;sub-heading-1&quot;&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/mdo/hyde/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's Jekyll?</title>
   <link href="http://hyde.getpoole.com/2012/02/06/whats-jekyll/"/>
   <updated>2012-02-06T00:00:00+01:00</updated>
   <id>http://hyde.getpoole.com/2012/02/06/whats-jekyll</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator, an open-source tool for creating simple yet powerful websites of all shapes and sizes. From &lt;a href=&quot;https://github.com/mojombo/jekyll/blob/master/README.markdown&quot;&gt;the project’s readme&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory […] and spits out a complete, static website suitable for serving with Apache or your favorite web server. This is also the engine behind GitHub Pages, which you can use to host your project’s page or blog right here from GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s an immensely useful tool and one we encourage you to use here with Hyde.&lt;/p&gt;

&lt;p&gt;Find out more by &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;visiting the project on GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 

</feed>
